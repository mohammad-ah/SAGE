{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/admin/activations/activations.component.ts","./src/app/components/admin/activations/activations.component.html","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/admin/ads/ads.component.ts","./src/app/components/admin/ads/ads.component.html","./src/app/components/admin/filtered/filtered.component.ts","./src/app/components/admin/filtered/filtered.component.html","./src/app/components/admin/header-admin/header-admin.component.ts","./src/app/components/admin/header-admin/header-admin.component.html","./src/app/components/admin/unhealthy/unhealthy.component.ts","./src/app/components/admin/unhealthy/unhealthy.component.html","./src/app/components/following/following.component.ts","./src/app/components/following/following.component.html","./src/app/components/home/ad/ad.component.ts","./src/app/components/home/ad/ad.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/notifications/notifications.component.ts","./src/app/components/notifications/notifications.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/users/users.component.ts","./src/app/components/users/users.component.html","./src/app/services/ad.service.ts","./src/app/services/admin.service.ts","./src/app/services/authGuard.service.ts","./src/app/services/authentication.service.ts","./src/app/services/sharedData.service.ts","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/shared/not-found/not-found.component.ts","./src/app/shared/not-found/not-found.component.html","./src/app/shared/side-bar/side-bar.component.ts","./src/app/shared/side-bar/side-bar.component.html","./src/app/store/actions/post.actions.ts","./src/app/store/reducers/post.reducer.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport {AppComponent} from './app.component';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {LoginComponent} from './components/login/login.component';\r\nimport { AdsComponent } from './components/admin/ads/ads.component';\r\nimport {NotificationsComponent} from \"./components/notifications/notifications.component\";\r\nimport {UsersComponent} from \"./components/users/users.component\";\r\nimport {FollowingComponent} from \"./components/following/following.component\";\r\nimport {AuthGuardService} from \"./services/authGuard.service\";\r\nimport {RegisterComponent} from \"./components/register/register.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  {path: 'admin', component: AdminComponent, canActivate: [AuthGuardService]},\r\n  {\r\n    path: 'ads',\r\n    component: AdsComponent, canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'home', component: HomeComponent, canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'login', component: LoginComponent\r\n  },\r\n  {\r\n    path: 'notifications', component: NotificationsComponent, canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'users', component: UsersComponent, canActivate: [AuthGuardService]\r\n  }\r\n  ,\r\n  {\r\n    path: 'followings', component: FollowingComponent, canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'register', component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthenticationService} from \"./services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent{\r\n  title = 'FrontEnd';\r\n  constructor(public auth: AuthenticationService) {\r\n  }\r\n}\r\n","<header>\r\n  <app-header *ngIf=\"auth.isLoggedIn()\" calss=\"header\"></app-header>\r\n</header>\r\n<main>\r\n  <div class=\"container\">\r\n    <app-side-bar *ngIf=\"auth.isLoggedIn()\" class=\"sidebar\"></app-side-bar>\r\n    <div class=\"content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <app-ad *ngIf=\"auth.isLoggedIn()\"></app-ad>\r\n  </div>\r\n</main>\r\n<!--<footer>-->\r\n<!--  <app-footer></app-footer>-->\r\n<!--</footer>-->\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\r\nimport { FooterComponent } from './shared/footer/footer.component';\r\nimport { SideBarComponent } from './shared/side-bar/side-bar.component';\r\nimport { HeaderComponent } from './shared/header/header.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { postsReducer } from './store/reducers/post.reducer';\r\nimport { StoreModule} from '@ngrx/store';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport { AdsComponent } from './components/admin/ads/ads.component';\r\nimport {MatCardModule} from \"@angular/material/card\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\r\nimport {MatMenuModule} from \"@angular/material/menu\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport { HeaderAdminComponent } from './components/admin/header-admin/header-admin.component';\r\nimport { UnhealthyComponent } from './components/admin/unhealthy/unhealthy.component';\r\nimport { FilteredComponent } from './components/admin/filtered/filtered.component';\r\nimport { ActivationsComponent } from './components/admin/activations/activations.component';\r\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\r\nimport {NotificationsComponent} from \"./components/notifications/notifications.component\";\r\nimport { AdComponent } from './components/home/ad/ad.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { FollowingComponent } from './components/following/following.component';\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NotFoundComponent,\r\n    FooterComponent,\r\n    SideBarComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    HomeComponent,\r\n    AdminComponent,\r\n    AdsComponent,\r\n    HeaderAdminComponent,\r\n    UnhealthyComponent,\r\n    FilteredComponent,\r\n    NotificationsComponent,\r\n    ActivationsComponent,\r\n    AdComponent,\r\n    UsersComponent,\r\n    FollowingComponent,\r\n    RegisterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    StoreModule.forRoot({\r\n      posts: postsReducer\r\n    }),\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSidenavModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-activations',\r\n  templateUrl: './activations.component.html',\r\n  styleUrls: ['./activations.component.scss']\r\n})\r\nexport class ActivationsComponent implements OnInit {\r\n  data: Object[];\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.adminService.getActivations().subscribe(\r\n      data => {\r\n        console.log(data['data']);\r\n        this.data = data['data'];\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  accept(user) {\r\n    this.adminService.acceptActivation(user['_id']).subscribe(\r\n      data => {\r\n        alert('success');\r\n        this.loadData();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n\r\n  }\r\n\r\n  refuse(user) {\r\n    this.adminService.refuseActivation(user['_id']).subscribe(\r\n      data => {\r\n        alert('success');\r\n        this.loadData();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-card *ngFor=\"let item of data\">\r\n  <div *ngIf=\"!item['reviewed']\">\r\n    <mat-card-title>{{item['userid']['username']}}</mat-card-title>\r\n    <mat-card-subtitle>{{item['userid']['email']}}</mat-card-subtitle>\r\n    <mat-card-actions>\r\n      <a mat-button (click)=\"accept(item)\">Accept</a>\r\n      <a mat-button (click)=\"refuse(item)\">Refuse</a>\r\n    </mat-card-actions>\r\n  </div>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nenum CurrentPage {\r\n  Ads,\r\n  Filtered,\r\n  Unhealthy,\r\n  Activations\r\n}\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  currentPage: CurrentPage = CurrentPage.Ads;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openAdsPage() {\r\n    this.currentPage = CurrentPage.Ads;\r\n  }\r\n\r\n  openFilteredPage() {\r\n    this.currentPage = CurrentPage.Filtered;\r\n  }\r\n\r\n  openUnhealthyPage() {\r\n    this.currentPage = CurrentPage.Unhealthy;\r\n  }\r\n\r\n  openActivationsPage() {\r\n    this.currentPage = CurrentPage.Activations;\r\n  }\r\n\r\n  isAdsPage(): boolean {\r\n    return this.currentPage === CurrentPage.Ads;\r\n  }\r\n\r\n  isFilteredPage(): boolean {\r\n    return this.currentPage === CurrentPage.Filtered;\r\n  }\r\n\r\n  isUnhealthyPage(): boolean {\r\n    return this.currentPage === CurrentPage.Unhealthy;\r\n  }\r\n\r\n  isActivationsPage(): boolean {\r\n    return this.currentPage === CurrentPage.Activations;\r\n  }\r\n\r\n}\r\n","<app-header-admin\r\n  (adsClicked)=\"openAdsPage()\"\r\n  (filteredClicked)=\"openFilteredPage()\"\r\n  (unhealthyClicked)=\"openUnhealthyPage()\"\r\n  (activationsClicked)=\"openActivationsPage()\">\r\n</app-header-admin>\r\n<app-ads *ngIf=\"isAdsPage()\"></app-ads>\r\n<app-filtered *ngIf=\"isFilteredPage()\"></app-filtered>\r\n<app-unhealthy *ngIf=\"isUnhealthyPage()\"></app-unhealthy>\r\n<app-activations *ngIf=\"isActivationsPage()\"></app-activations>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-ads',\r\n  templateUrl: './ads.component.html',\r\n  styleUrls: ['./ads.component.scss']\r\n})\r\nexport class AdsComponent implements OnInit {\r\n\r\n  text: string;\r\n  image: string;\r\n  isAll: boolean;\r\n\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  pushAd() {\r\n    this.adminService.pushAd({\r\n      text: this.text,\r\n      image: this.image,\r\n      isAll: this.isAll\r\n    }).subscribe(\r\n      data => {\r\n        alert('ad pushed');\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n  Text: <input [(ngModel)]=\"text\"><br>\r\n  Image: <input [(ngModel)]=\"image\"><br>\r\n  <input [(ngModel)]=\"isAll\" type=\"checkbox\"> Is All<br>\r\n  <a mat-button (click)=\"pushAd()\">Push</a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { Filter } from 'src/app/models/filter.model';\r\n\r\n@Component({\r\n  selector: 'app-filtered',\r\n  templateUrl: './filtered.component.html',\r\n  styleUrls: ['./filtered.component.scss']\r\n})\r\nexport class FilteredComponent implements OnInit {\r\n\r\n  data: Filter[];\r\n  isAddOrEdit = false;\r\n  editWord = \"\";\r\n\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  switchAddEdit() {\r\n    this.isAddOrEdit = !this.isAddOrEdit;\r\n  }\r\n\r\n  loadData() {\r\n    this.adminService.getFiltered().subscribe(\r\n      data => {\r\n        console.log(data['data']);\r\n        this.data = data['data'];\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  editDone() {\r\n    this.adminService.editFilter(this.editWord).subscribe(\r\n      data => {\r\n        console.log('success');\r\n        this.switchAddEdit();\r\n        this.editWord = \"\";\r\n        this.loadData();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  editMe(item: Filter) {\r\n    this.editWord = item.word;\r\n    this.switchAddEdit();\r\n  }\r\n\r\n}\r\n","<mat-list>\r\n  <mat-list-item *ngIf=\"!isAddOrEdit\">\r\n    <a mat-button (click)=\"switchAddEdit()\">Add Word</a>\r\n  </mat-list-item>\r\n  <mat-list-item *ngIf=\"isAddOrEdit\">\r\n    <input [(ngModel)]=\"editWord\">\r\n    <a mat-button (click)=\"editDone()\">Done</a>\r\n  </mat-list-item>\r\n  <mat-list-item *ngFor=\"let item of data\">\r\n    <div>\r\n      <span>{{item.word}} </span>\r\n      <!-- <a mat-button (click)=\"editMe(item)\"> Edit </a>\r\n      <a mat-button> Delete </a> -->\r\n    </div>\r\n  </mat-list-item>\r\n\r\n </mat-list>\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-admin',\r\n  templateUrl: './header-admin.component.html',\r\n  styleUrls: ['./header-admin.component.scss']\r\n})\r\nexport class HeaderAdminComponent implements OnInit {\r\n\r\n  @Output() adsClicked: EventEmitter<any> = new EventEmitter();\r\n  @Output() filteredClicked: EventEmitter<any> = new EventEmitter();\r\n  @Output() unhealthyClicked: EventEmitter<any> = new EventEmitter();\r\n  @Output() activationsClicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n  <mat-toolbar-row>\r\n    <span>Admin</span>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row>\r\n    <mat-nav-list class=\"list-horizontal\">\r\n      <a mat-list-item (click)=\"adsClicked.emit()\" routerLinkActive=\"active\">Ads</a>\r\n      <a mat-list-item (click)=\"filteredClicked.emit()\" routerLinkActive=\"active\">Filtered</a>\r\n      <a mat-list-item (click)=\"unhealthyClicked.emit()\" routerLinkActive=\"active\">Unhealthy</a>\r\n      <a mat-list-item (click)=\"activationsClicked.emit()\" routerLinkActive=\"active\">Activations</a>\r\n    </mat-nav-list>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { Post } from 'src/app/models/post.model';\r\n\r\n@Component({\r\n  selector: 'app-unhealthy',\r\n  templateUrl: './unhealthy.component.html',\r\n  styleUrls: ['./unhealthy.component.scss']\r\n})\r\nexport class UnhealthyComponent implements OnInit {\r\n  data: Object[];\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.adminService.getUnhealthy().subscribe(\r\n      data => {\r\n        console.log(data['data']);\r\n        this.data = data['data'];\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  makeHealthy(item) {\r\n    this.adminService.disableUnhealthy(item['_id']).subscribe(\r\n      data => {\r\n        alert('success');\r\n        this.loadData();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-card *ngFor=\"let item of data\">\r\n  <mat-card-title>{{item['userid']['username']}}</mat-card-title>\r\n  <mat-card-content>{{item['text']}}</mat-card-content>\r\n  <mat-card-actions>\r\n    <a mat-button (click)=\"makeHealthy(item)\">Make Healthy</a>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-following',\r\n  templateUrl: './following.component.html',\r\n  styleUrls: ['./following.component.scss']\r\n})\r\nexport class FollowingComponent implements OnInit {\r\n  followings;\r\n  userId;\r\n\r\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.auth.getId();\r\n\r\n    this.http.get('http://127.0.0.1:3000/user/' + this.userId + '/followings')\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          this.followings = data['followings'];\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  unfollow(id: any) {\r\n    this.http.post('http://127.0.0.1:3000/user/unfollow', {\r\n      followingId: id,\r\n      id: this.userId\r\n    })\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n","<!--<div *ngFor=\"let notification of notifications ; let idx = index\">-->\r\n<div>\r\n  <mat-sidenav-container class=\"followings-container\">\r\n    <mat-card class=\"following-card\" *ngFor=\"let following of followings; let idx = index\">\r\n      <mat-card-content>\r\n        <div class=\"follow-content\">\r\n          <span>{{following.username}}</span>\r\n          <button mat-button color=\"primary\" class=\"funollow-button\" (click)=\"unfollow(following._id)\">UnFollow <mat-icon>person_add_disabled</mat-icon></button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-sidenav-container>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdService } from 'src/app/services/ad.service';\r\n\r\n@Component({\r\n  selector: 'app-ad',\r\n  templateUrl: './ad.component.html',\r\n  styleUrls: ['./ad.component.scss']\r\n})\r\nexport class AdComponent implements OnInit {\r\n  ad: Object;\r\n  constructor(private adService: AdService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.adService.getAd().subscribe(\r\n      data => {\r\n        console.log(data['data']);\r\n        this.ad = data['data'];\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n}\r\n","<mat-card *ngIf=\"ad\" class=\"ad\">\r\n  <mat-card-subtitle>{{ad['text']}}</mat-card-subtitle>\r\n  <img mat-card-image src=\"{{ad['image']}}\">\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport {PostState} from '../../store/states/post.state';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport * as PostActions from '../../store/actions/post.actions';\r\nimport {Observable} from 'rxjs';\r\nimport {Post} from '../../models/post.model';\r\nimport {first} from 'rxjs/operators';\r\nimport io from 'socket.io-client';\r\nimport {SharedDataService} from \"../../services/sharedData.service\";\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\n\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  posts: Observable<Post[]>;\r\n  delIdx = null;\r\n  postIdx = null;\r\n  skip = 0;\r\n  limit = 20;\r\n  userId = null;\r\n  userName = null;\r\n  postText = null;\r\n  postNotify = false;\r\n  postImg = null;\r\n  errMsg = '';\r\n  socket;\r\n  followers;\r\n\r\n  constructor(private store: Store<PostState>, private http: HttpClient, private sharedDataService: SharedDataService,\r\n              private auth: AuthenticationService) {\r\n    this.posts = store.select('posts');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.skip = 0;\r\n    this.limit = 20;\r\n\r\n    this.userId = this.auth.getId();\r\n\r\n    this.userName = this.auth.getName();\r\n\r\n    this.followers = this.auth.getFollowers();\r\n\r\n    this.sharedDataService.setsShowNotification(false);\r\n\r\n    this.loadPosts();\r\n\r\n    this.socketConnect();\r\n    this.updateNotifications();\r\n  }\r\n\r\n  showDeleteSection(index) {\r\n    if (this.delIdx === index){\r\n      this.delIdx = null;\r\n    } else {\r\n      this.delIdx = index;\r\n    }\r\n  }\r\n\r\n  showCommentsSection(index) {\r\n    if (this.postIdx === index){\r\n      this.postIdx = null;\r\n    } else {\r\n      this.postIdx = index;\r\n    }\r\n  }\r\n\r\n  deletePost(index: any, id: any) {\r\n    const res = this.posts.pipe(first()).subscribe(result => {\r\n      // const index = result.findIndex(objInItems => new String(objInItems.post['_id']).trim() === new String(id).trim());\r\n      // console.log(index, id);\r\n\r\n    this.http.post('http://127.0.0.1:3000/post/remove', {id})\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.delIdx = null;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n\r\n    this.store.dispatch(new PostActions.RemovePost(index));\r\n    });\r\n  }\r\n\r\n  likeUnlike(idx: number, pid: any) {\r\n    this.posts.pipe(first()).subscribe(result => {\r\n      console.log(result);\r\n      const index = result.findIndex(objInItems => new String(objInItems.post['_id']).trim() === new String(pid).trim());\r\n      const currentPost = result[index].post;\r\n      let poss = JSON.stringify(currentPost);\r\n      poss = JSON.parse(poss);\r\n\r\n      console.log(poss['likes']);\r\n\r\n      // let likeIndex = poss['likes'].findIndex(objInItems => new String(objInItems).trim() === new String(this.userId).trim());\r\n      // if (likeIndex < 0) {\r\n        const likeIndex = poss['likes'].findIndex((objInItems) => {\r\n          console.log(objInItems);\r\n          if (objInItems.hasOwnProperty('userid')) {\r\n            return new String(objInItems.userid._id).trim() === new String(this.userId).trim();\r\n          } else {\r\n            return new String(objInItems).trim() === new String(this.userId).trim();\r\n          }\r\n        });\r\n      // }\r\n      console.log(likeIndex)\r\n      if (likeIndex < 0) {\r\n        if (poss['likes'] === undefined) {\r\n          poss['likes'] = [this.userId];\r\n        } else {\r\n          poss['likes'].push(this.userId);\r\n        }\r\n        this.store.dispatch(new PostActions.AddLike(idx, {post: poss}));\r\n        // add like to DB\r\n\r\n        this.http.post('http://127.0.0.1:3000/likes/like', {userid: this.userId, postid: pid})\r\n          .subscribe(data => {\r\n              console.log(data);\r\n              this.delIdx = null;\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            });\r\n      }\r\n      else {\r\n        if (poss['likes'].length === 1) {\r\n          poss['likes'] = [];\r\n        } else {\r\n          poss['likes'].splice(likeIndex, 1);\r\n        }\r\n        this.store.dispatch(new PostActions.RemoveLike(idx, {post: poss}));\r\n\r\n        // remove like from DB\r\n        this.http.post('http://127.0.0.1:3000/likes/dislike', {userid: this.userId, postid: pid})\r\n          .subscribe(data => {\r\n              console.log(data);\r\n              this.delIdx = null;\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  AddComment(idx: number, pid: any, event: any) {\r\n    const text = event.target.value;\r\n\r\n    if(event.key == 'Enter') {\r\n      console.log(event.key);\r\n      this.posts.pipe(first()).subscribe(result => {\r\n        const index = result.findIndex(objInItems => new String(objInItems.post['_id']).trim() === new String(pid).trim());\r\n        const currentPost = result[index].post;\r\n        let poss = JSON.stringify(currentPost);\r\n        poss = JSON.parse(poss);\r\n\r\n        // const likeIndex = poss['comments'].findIndex(objInItems => new String(objInItems).trim() === new String(pid).trim());\r\n\r\n        const bodyRequest = {postid: pid, userid: this.userId, text: text};\r\n\r\n        const comment = {\r\n          text: text,\r\n          userid: {\r\n            username: this.userName,\r\n            _id: this.userId\r\n          }\r\n        };\r\n\r\n        if (poss['comments'] === undefined) {\r\n          poss['comments'] = [comment];\r\n        } else {\r\n          poss['comments'].push(comment);\r\n        }\r\n\r\n        this.http.post('http://127.0.0.1:3000/comments/create-comment', bodyRequest)\r\n          .subscribe(data => {\r\n              console.log(data);\r\n              this.delIdx = null;\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            });\r\n\r\n        this.store.dispatch(new PostActions.AddComment(idx, {post: poss}));\r\n      });\r\n    }\r\n  }\r\n\r\n  loadMorePosts() {\r\n    this.skip += this.limit;\r\n    this.loadPosts();\r\n  }\r\n\r\n  loadPosts() {\r\n    this.http.get('http://127.0.0.1:3000/get-posts/' + this.userId + '&' + this.skip + '&' + this.limit)\r\n      .subscribe(data => {\r\n          for (const post of data['posts']) {\r\n            this.store.dispatch(new PostActions.AddPost({\r\n              post\r\n            }));\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  addPost() {\r\n    if (this.postText === null && this.postImg === null) {\r\n      this.errMsg = 'You should choose an image or write something!';\r\n      return;\r\n    }\r\n\r\n    console.log('inside')\r\n\r\n    let fd = new FormData();\r\n    if (this.postImg !== null) {\r\n      fd.append('image', this.postImg);\r\n    }\r\n    if (this.postText !== null) {\r\n      fd.append('text', this.postText);\r\n    }\r\n\r\n    // console.log(this.postText);\r\n    // console.log(this.postImg);\r\n\r\n    fd.append('notifyusers', this.postNotify + '');\r\n    fd.append('userid', this.userId);\r\n\r\n    // console.log('inside 2')\r\n\r\n    this.http.post('http://127.0.0.1:3000/post/create-post', fd)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        let post = data['post'];\r\n        post['likes'] = [];\r\n        post['comments'] = [];\r\n\r\n        this.store.dispatch(new PostActions.AddPostFirst({\r\n            post: post\r\n          }));\r\n        this.errMsg = null;\r\n\r\n        this.sendNotification();\r\n\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n    console.log('outside')\r\n  }\r\n\r\n  imageSelected(event: Event) {\r\n    this.postImg = event.target['files'][0];\r\n  }\r\n\r\n  sendNotification() {\r\nconsole.log(this.followers);\r\n    this.socket.emit('getMsg', {\r\n      from: this.userId,\r\n      toid : this.followers,\r\n      msg : 'user have new post',\r\n      name : 'PANDA MAIN'\r\n    });\r\n    console.log('message emitted');\r\n  }\r\n\r\n  private socketConnect() {\r\n    this.socket = io('http://localhost:3000', {\r\n      transports: ['websocket']\r\n    });\r\n\r\n    this.socket.emit('username', this.userId);\r\n  }\r\n\r\n  private updateNotifications() {\r\n    this.socket.on('sendMsg', (data) => {\r\n      console.log('message recieved', data);\r\n      this.sharedDataService.setsShowNotification(true);\r\n    });\r\n  }\r\n}\r\n","<div>\r\n  <mat-sidenav-container class=\"new-post-container\">\r\n    <mat-card class=\"new-post-card\">\r\n      <mat-card-header>\r\n        <mat-card-title>Post Something</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"\">\r\n          <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../assets/test.jpg)'}\" class=\"post-header-image\"></div>\r\n          <mat-form-field class=\"post-text-area\" appearance=\"fill\">\r\n            <mat-label>What you feel?</mat-label>\r\n            <textarea matInput  matTextareaAutosize=\"false\" [(ngModel)]=\"postText\"\r\n                      [rows]=\"6\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions class=\"post-action-buttons\">\r\n        <button mat-button color=\"primary\">\r\n          <label for=\"fileToUpload\">\r\n            <mat-icon class=\"add-photo-icon\">add_photo_alternate</mat-icon> Add Image\r\n          </label>\r\n        </button>\r\n        <input id=\"fileToUpload\" type=\"file\" accept=\"image/*\" style=\"display:none;\" (change)=\"imageSelected($event)\">\r\n\r\n        <mat-checkbox color=\"primary\" [(ngModel)]=\"postNotify\">Notify Followers</mat-checkbox>\r\n\r\n        <button mat-button color=\"primary\" class=\"post-button\" (click)=\"addPost()\">Post <mat-icon>near_me</mat-icon></button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <mat-error *ngIf=\"errMsg\" class=\"err-msg\">{{errMsg}}</mat-error>\r\n  </mat-sidenav-container>\r\n\r\n  <div *ngFor=\"let post of posts | async; let idx = index\">\r\n    <mat-sidenav-container class=\"comments-container\" *ngIf=\"post.post._id\" id=\"post_{{post.post._id}}\">\r\n      <mat-card class=\"post-card\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../assets/test.jpg)'}\" class=\"example-header-image\"></div>\r\n          <mat-card-title class=\"title\">{{post.post.userid.username}}</mat-card-title>\r\n          <button mat-icon-button *ngIf=\"post.post.userid._id === userId || post.post.userid === userId\" color=\"primary\" aria-label=\"Example icon-button with a heart icon\" class=\"edit-post\"\r\n                  id=\"post-edit_{{post.post._id}}\" (click)=\"showDeleteSection(idx)\">\r\n            <mat-icon>more_vert</mat-icon></button>\r\n          <div class=\"remove-post-cont\" id=\"post-remove_{{post.post._id}}\" [hidden]=\"delIdx !== idx\">\r\n            <button mat-button color=\"primary\" class=\"remove-post\" (click)=\"deletePost(idx, post.post._id)\">Delete</button>\r\n          </div>\r\n        </mat-card-header>\r\n        <div class=\"img-container\">\r\n          <img *ngIf=\"post.post.img\" mat-card-image class=\"img-article\" src=\"http://localhost:3000/{{post.post.img}}\" alt=\"\">\r\n        </div>\r\n        <mat-card-content>\r\n          <p>\r\n            {{post.post.text}}\r\n          </p>\r\n        </mat-card-content>\r\n        <mat-card-actions class=\"action-buttons\">\r\n          <button mat-button color=\"primary\" (click)=\"likeUnlike(idx, post.post._id)\"><mat-icon>thumb_up_alt</mat-icon> {{post.post.likes.length}} Likes</button>\r\n          <button mat-button color=\"primary\" (click)=\"showCommentsSection(idx)\"><mat-icon>comment</mat-icon> Comments</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n      <div [hidden]=\"postIdx !== idx\">\r\n        <mat-card class=\"post-comment\">\r\n          <mat-card-header class=\"post-comment-header\">\r\n            <mat-card-subtitle>Comment</mat-card-subtitle>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"\">\r\n              <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../assets/test.jpg)'}\" class=\"post-header-image\"></div>\r\n              <mat-form-field class=\"comment-text-area\" appearance=\"fill\">\r\n                <mat-label>Comment?</mat-label>\r\n                <textarea matInput  matTextareaAutosize=\"false\" (keyup)=\"AddComment(idx, post.post._id, $event)\"\r\n                          [rows]=\"3\"></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n  <!--      <div *ngFor=\"let comment of post.post.comments | async; let idx = index\">-->\r\n\r\n        <mat-card class=\"comments-card\" *ngFor=\"let comment of post.post.comments; let cidx = index\">\r\n          <mat-card-header>\r\n            <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../assets/test.jpg)'}\" class=\"example-header-image\"></div>\r\n            <mat-card-subtitle class=\"title\">{{comment.userid.username}}</mat-card-subtitle>\r\n  <!--          <button mat-icon-button *ngIf=\"comment.userid._id === userId\" color=\"primary\" aria-label=\"Delete comment\" class=\"edit-post\">-->\r\n  <!--            <mat-icon>delete</mat-icon></button>-->\r\n          </mat-card-header>\r\n          <mat-card-content class=\"comment-content\">\r\n            <p>\r\n              {{comment.text}}\r\n            </p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n    </mat-sidenav-container>\r\n  </div>\r\n\r\n  <mat-sidenav-container class=\"load-more\">\r\n    <mat-card class=\"load-more-content\">\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" aria-label=\"Load more posts\" class=\"load-more-button\" (click)=\"loadMorePosts()\">\r\n          <mat-icon>refresh</mat-icon></button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-sidenav-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  credentials = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  adminUser = 'lionos';\r\n  adminPass = 'happyPanda';\r\n  error: string;\r\n  asAdmin: boolean;\r\n  form: FormGroup = new FormGroup({\r\n    username: new FormControl(),\r\n    password: new FormControl(),\r\n    asAdmin: new FormControl()\r\n  });\r\n\r\n  constructor(private router: Router, private auth: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.form.value.username)\r\n    if (this.form.value.username === null || this.form.value.password === null) {\r\n      this.error = 'Please fill username and password';\r\n      return;\r\n    }\r\n    this.error = '';\r\n    if (this.form.value.asAdmin !== undefined && this.form.value.asAdmin) {\r\n      if (\r\n        this.form.value.username === this.adminUser &&\r\n        this.form.value.password === this.adminPass\r\n      ) {\r\n        this.router.navigateByUrl('/admin');\r\n      }\r\n    } else {\r\n      this.login(this);\r\n    }\r\n  }\r\n\r\n  login(formGroup) {\r\n    console.log(formGroup.form.value.username);\r\n    this.auth.login(formGroup.form.value).subscribe(() => {\r\n      this.router.navigateByUrl('/home');\r\n    }, (err) => {\r\n      this.error = 'Invalid credentials';\r\n\r\n      console.error(err);\r\n    });  }\r\n}\r\n","<mat-card class=\"login-form\">\r\n  <mat-card-title>Login</mat-card-title>\r\n<mat-card-content>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n\r\n  <mat-form-field>\r\n    <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n  </mat-form-field>\r\n\r\n<mat-checkbox formControlName=\"asAdmin\" color=\"primary\">Login As Admin</mat-checkbox>\r\n\r\n<div class=\"button\">\r\n  <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\r\n</div>\r\n\r\n  <p *ngIf=\"error\" class=\"error\">\r\n    {{ error }}\r\n  </p>\r\n\r\n</form>\r\n</mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n  userId;\r\n  notifications;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = '5e8bcb6c258256022cac8a0c';\r\n    this.http.get('http://127.0.0.1:3000/notifications/get/' + this.userId)\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          this.notifications = data['notifications'];\r\n\r\n          this.notifications.forEach(notification =>  {\r\n            this.http.post('http://127.0.0.1:3000/notifications/read/' + notification['_id'] + '/' + this.userId, {})\r\n              .subscribe(postData => {\r\n                  console.log(postData);\r\n                },\r\n                error => {\r\n                  console.log(error);\r\n                });\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n}\r\n","<div *ngFor=\"let notification of notifications ; let idx = index\">\r\n  <mat-sidenav-container class=\"notification-container\">\r\n    <mat-card class=\"notification-card\">\r\n      <mat-card-content>\r\n        <p>\r\n          From <a href=\"user/{{notification.from._id}}\">{{notification.from.username}}</a> {{notification.text}}\r\n        </p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </mat-sidenav-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  error;\n  form: FormGroup = new FormGroup({\n    username: new FormControl(),\n    password: new FormControl(),\n    email: new FormControl()\n  });\n\n  constructor(private auth: AuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  submit() {\n    console.log(this.form.value);\n    this.auth.register(this.form.value).subscribe(() => {\n      this.router.navigateByUrl('/login');\n    }, (err) => {\n      this.error = 'Invalid credentials';\n\n      console.error(err);\n    });\n  }\n\n  login(formGroup) {\n    // console.log(formGroup.form.value.username);\n    // this.auth.login(formGroup.form.value).subscribe(() => {\n    //   this.router.navigateByUrl('/login');\n    // }, (err) => {\n    //   this.error = 'Invalid credentials';\n    //\n    //   console.error(err);\n    // });\n  }\n}\n","<mat-card class=\"login-form\">\n  <mat-card-title>Register</mat-card-title>\n  <mat-card-content>\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n      <mat-form-field>\n        <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input type=\"email\" matInput placeholder=\"email\" formControlName=\"email\">\n      </mat-form-field>\n\n      <div class=\"button\">\n        <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\n      </div>\n\n      <p *ngIf=\"error\" class=\"error\">\n        {{ error }}\n      </p>\n\n    </form>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>signup works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users;\r\n  userId;\r\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.userId = this.auth.getId();\r\n\r\n    this.http.post('http://127.0.0.1:3000/user/list', {\r\n      id: this.userId\r\n    })\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          this.users = data['users'];\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  follow(id: any) {\r\n    this.http.post('http://127.0.0.1:3000/user/follow', {\r\n      id: this.userId,\r\n      followerId: id\r\n    })\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n","<div>\r\n  <mat-sidenav-container class=\"users-container\">\r\n    <mat-card class=\"user-card\" *ngFor=\"let user of users ; let idx = index\">\r\n      <mat-card-content>\r\n        <div class=\"user-content\">\r\n          <span>{{user.username}}</span>\r\n          <button mat-flat-button color=\"primary\" class=\"follow-button\" (click)=\"follow(user._id)\">Follow <mat-icon>person_add</mat-icon></button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-sidenav-container>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAd() {\r\n    return this.httpClient.get('http://localhost:3000/admin/ad');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Filter } from '../models/filter.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  constructor(private httpClient: HttpClient ) { }\r\n\r\n  getFiltered() {\r\n    return this.httpClient.get('http://localhost:3000/admin/filtered');\r\n  }\r\n\r\n  editFilter(word: string) {\r\n    return this.httpClient.post('http://localhost:3000/admin/addFilter', {word});\r\n  }\r\n\r\n  pushAd(body) {\r\n    return this.httpClient.post('http://localhost:3000/admin/pushAd', body);\r\n  }\r\n\r\n  getUnhealthy() {\r\n    return this.httpClient.get('http://localhost:3000/admin/unhealthy-post');\r\n  }\r\n\r\n  disableUnhealthy(id) {\r\n    return this.httpClient.post('http://localhost:3000/admin/disable-unhealthy', {id});\r\n  }\r\n\r\n  getActivations() {\r\n    return this.httpClient.get('http://localhost:3000/admin/activations');\r\n  }\r\n\r\n  acceptActivation(id) {\r\n    return this.httpClient.post('http://localhost:3000/admin/accept-activation', {id});\r\n  }\r\n\r\n  refuseActivation(id) {\r\n    return this.httpClient.post('http://localhost:3000/admin/refuse-activation', {id});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl('/');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Router} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private token;\r\n  private id;\r\n  private name;\r\n  private followers;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('mean-token', token);\r\n    this.token = token;\r\n  }\r\n\r\n  private saveId(id: any | string) {\r\n    localStorage.setItem('mean-id', id);\r\n    this.id = id;\r\n  }\r\n\r\n  private saveName(name: any | string) {\r\n    localStorage.setItem('mean-name', name);\r\n    this.name = name;\r\n  }\r\n\r\n  private saveFollowers(followers: any ) {\r\n    localStorage.setItem('mean-followers', followers);\r\n    this.followers = followers;\r\n  }\r\n\r\n  public getToken(): string {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem('mean-token');\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  public getId(): string {\r\n    if (!this.id) {\r\n      this.id = localStorage.getItem('mean-id');\r\n    }\r\n    return this.id;\r\n  }\r\n\r\n  public getName(): string {\r\n    if (!this.name) {\r\n      this.name = localStorage.getItem('mean-id');\r\n    }\r\n    return this.name;\r\n  }\r\n\r\n  public getFollowers(): string {\r\n    if (!this.followers) {\r\n      this.followers = localStorage.getItem('mean-followers');\r\n    }\r\n    return this.followers;\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = '';\r\n    window.localStorage.removeItem('mean-token');\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  public getUserDetails() {\r\n    const token = this.getToken();\r\n    let payload;\r\n    if (token) {\r\n      payload = token.split('.')[1];\r\n      payload = window.atob(payload);\r\n      return JSON.parse(payload);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails();\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private request(method: 'post'|'get', type: 'login'|'register', user?): Observable<any> {\r\n    let base;\r\n\r\n    if (method === 'post') {\r\n      base = this.http.post('http://localhost:3000/user/' + type, user);\r\n    } else {\r\n      base = this.http.get('http://localhost:3000/user/' + type, { headers: { Authorization: `Bearer ${this.getToken()}` }});\r\n    }\r\n\r\n    console.log(base);\r\n\r\n    const request = base.pipe(\r\n      map((data) => {\r\n        console.log(data)\r\n        if (data['token']) {\r\n          this.saveToken(data['token']);\r\n          this.saveId(data['user']._id);\r\n          this.saveName(data['user'].username);\r\n          this.saveFollowers(data['user'].followers);\r\n          console.log(data['user']);\r\n        }\r\n        return data;\r\n      })\r\n    );\r\n\r\n    return request;\r\n  }\r\n\r\n  public login(user): Observable<any> {\r\n    console.log(user)\r\n    return this.request('post', 'login', user);\r\n  }\r\n\r\n\r\n  register(value: any) {\r\n    return this.request('post', 'register', value);\r\n\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable, Subject} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedDataService {\r\n  newNotification = new Subject();\r\n  newNotification$ = this.newNotification.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  getsNewNotification(): Observable<any> {\r\n    return this.newNotification$;\r\n  }\r\n\r\n  setsShowNotification(newNot: boolean) {\r\n    this.newNotification.next(newNot);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport {SharedDataService} from '../../services/sharedData.service';\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  newNotifications;\r\n\r\n  constructor(private sharedDataService: SharedDataService, public auth: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sharedDataService.getsNewNotification().subscribe(data => {\r\n      console.log('observing', data);\r\n      this.newNotifications = data;\r\n      console.log(this.newNotifications);\r\n    });\r\n    console.log('notific', this.newNotifications);\r\n  }\r\n\r\n  logout() {\r\n    console.log('out')\r\n    this.auth.logout();\r\n  }\r\n}\r\n","<mat-toolbar class=\"main-toolbar\" color=\"primary\">\r\n  <div class=\"content\">\r\n    <span><a href=\"/home\">liLCPanda</a></span>\r\n          <input type=\"text\" matInput class=\"search-area\">\r\n    <button mat-icon-button color=\"primary\" aria-label=\"Load more posts\" class=\"search-button\">\r\n      <mat-icon>search</mat-icon></button>\r\n\r\n    <button mat-icon-button routerLink=\"notifications\" *ngIf=\"newNotifications\" color=\"warn\" aria-label=\"Load more posts\" class=\"notifications-button\">\r\n      <mat-icon>notifications_active</mat-icon></button>\r\n\r\n    <button mat-icon-button routerLink=\"notifications\" *ngIf=\"!newNotifications\" color=\"secondary\" aria-label=\"Load more posts\" class=\"notifications-button\">\r\n      <mat-icon>notifications</mat-icon></button>\r\n\r\n    <button *ngIf=\"auth.isLoggedIn()\" mat-icon-button routerLink=\"logout\" color=\"secondary\" aria-label=\"Load more posts\" class=\"logout-button\" (click)=\"logout()\">\r\n      <mat-icon>exit_to_app</mat-icon> Logout</button>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.scss']\n})\nexport class SideBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\r\n    <mat-card class=\"following-cad\">\r\n      <mat-card-content>\r\n        <button mat-button routerLink=\"followings\" color=\"primary\" aria-label=\"Load more posts\" class=\"buttons following-button\">\r\n          <mat-icon>people</mat-icon> Following</button>\r\n\r\n        <button mat-button routerLink=\"users\" color=\"primary\" aria-label=\"Load more posts\" class=\"buttons users-button\">\r\n          <mat-icon>group_add</mat-icon> Users</button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n","// Section 1\r\nimport { Action } from '@ngrx/store';\r\nimport { Post } from '../../models/post.model';\r\n\r\n// Section 2\r\nexport const ADD_POST       = '[POST] Add';\r\nexport const LIST_POSTS    = '[POST] List';\r\nexport const REMOVE_POST    = '[POST] Remove';\r\nexport const ADD_LIKE    = '[POST] Like';\r\nexport const REMOVE_LIKE    = '[POST] DisLike';\r\nexport const ADD_COMMENT    = '[POST] Comment';\r\nexport const ADD_FIRST    = '[POST] AddFirst';\r\n\r\n// Section 3\r\nexport class AddPost implements Action {\r\n  readonly type = ADD_POST;\r\n\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport class ListPosts implements Action {\r\n  readonly type = LIST_POSTS;\r\n\r\n  constructor(public payload: Post[]) {}\r\n}\r\n\r\nexport class RemovePost implements Action {\r\n  readonly type = REMOVE_POST;\r\n\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class AddLike implements Action {\r\n  readonly type = ADD_LIKE;\r\n\r\n  constructor(public idx: number, public pid: any) {}\r\n}\r\n\r\nexport class RemoveLike implements Action {\r\n  readonly type = REMOVE_LIKE;\r\n\r\n  constructor(public idx: number, public pid: any) {}\r\n}\r\n\r\nexport class AddComment implements Action {\r\n  readonly type = ADD_COMMENT;\r\n\r\n  constructor(public idx: number, public post: any) {}\r\n}\r\n\r\nexport class AddPostFirst implements Action {\r\n  readonly type = ADD_FIRST;\r\n\r\n  constructor(public post: any) {}\r\n}\r\n\r\n// Section 4\r\nexport type Actions = ListPosts | AddPost | AddPostFirst | RemovePost | AddComment | AddLike | RemoveLike;\r\n","import { Action } from '@ngrx/store';\r\nimport { Post } from '../../models/post.model';\r\nimport * as PostActions from '../../store/actions/post.actions';\r\n\r\n// Section 1\r\nconst initialState: Post = {\r\n  post: {text: 'test'}\r\n};\r\n\r\n// Section 2\r\nexport function postsReducer(state: Post[] = [initialState], action: PostActions.Actions) {\r\n\r\n  let idx = -1;\r\n  // Section 3\r\n  switch (action.type) {\r\n    case PostActions.LIST_POSTS:\r\n      return state;\r\n    case PostActions.ADD_POST:\r\n      return [...state, action.payload];\r\n    case PostActions.ADD_FIRST:\r\n      return [action.post, ...state];\r\n    case PostActions.REMOVE_POST:\r\n      idx = action.payload;\r\n      return [...state.slice(0, idx), ...state.slice(idx + 1)];\r\n    case PostActions.ADD_LIKE:\r\n      idx = action.idx;\r\n      return [...state.slice(0, idx),\r\n        action.pid,\r\n        ...state.slice(idx + 1)];\r\n    case PostActions.REMOVE_LIKE:\r\n      idx = action.idx;\r\n      return [...state.slice(0, idx),\r\n        action.pid,\r\n        ...state.slice(idx + 1)];\r\n    case PostActions.ADD_COMMENT:\r\n      idx = action.idx;\r\n      return [...state.slice(0, idx),\r\n        action.post,\r\n        ...state.slice(idx + 1)];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport '@angular/compiler';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}