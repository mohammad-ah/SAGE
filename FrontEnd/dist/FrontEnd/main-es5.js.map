{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/admin/activations/activations.component.ts","webpack:///src/app/components/admin/activations/activations.component.html","webpack:///src/app/components/admin/admin.component.ts","webpack:///src/app/components/admin/admin.component.html","webpack:///src/app/components/admin/ads/ads.component.ts","webpack:///src/app/components/admin/ads/ads.component.html","webpack:///src/app/components/admin/filtered/filtered.component.ts","webpack:///src/app/components/admin/filtered/filtered.component.html","webpack:///src/app/components/admin/header-admin/header-admin.component.ts","webpack:///src/app/components/admin/header-admin/header-admin.component.html","webpack:///src/app/components/admin/unhealthy/unhealthy.component.ts","webpack:///src/app/components/admin/unhealthy/unhealthy.component.html","webpack:///src/app/components/following/following.component.ts","webpack:///src/app/components/following/following.component.html","webpack:///src/app/components/home/ad/ad.component.ts","webpack:///src/app/components/home/ad/ad.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/notifications/notifications.component.ts","webpack:///src/app/components/notifications/notifications.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/components/users/users.component.ts","webpack:///src/app/components/users/users.component.html","webpack:///src/app/services/ad.service.ts","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/authGuard.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/sharedData.service.ts","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/shared/not-found/not-found.component.ts","webpack:///src/app/shared/not-found/not-found.component.html","webpack:///src/app/shared/side-bar/side-bar.component.ts","webpack:///src/app/shared/side-bar/side-bar.component.html","webpack:///src/app/store/actions/post.actions.ts","webpack:///src/app/store/reducers/post.reducer.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","auth","title","selector","templateUrl","styleUrls","AppModule","posts","declarations","providers","bootstrap","ActivationsComponent","adminService","loadData","getActivations","subscribe","data","console","log","error","user","acceptActivation","alert","refuseActivation","CurrentPage","AdminComponent","currentPage","Ads","Filtered","Unhealthy","Activations","openAdsPage","openFilteredPage","openUnhealthyPage","openActivationsPage","AdsComponent","pushAd","text","image","isAll","FilteredComponent","isAddOrEdit","editWord","getFiltered","editFilter","switchAddEdit","item","word","HeaderAdminComponent","adsClicked","filteredClicked","unhealthyClicked","activationsClicked","UnhealthyComponent","getUnhealthy","disableUnhealthy","FollowingComponent","http","userId","getId","get","followings","post","followingId","window","location","reload","AdComponent","adService","getAd","ad","HomeComponent","store","sharedDataService","delIdx","postIdx","skip","limit","userName","postText","postNotify","postImg","errMsg","select","getName","followers","getFollowers","setsShowNotification","loadPosts","socketConnect","updateNotifications","index","res","pipe","result","dispatch","idx","pid","findIndex","objInItems","String","trim","currentPost","poss","JSON","stringify","parse","likeIndex","hasOwnProperty","userid","_id","undefined","push","postid","length","splice","event","target","value","key","bodyRequest","comment","username","fd","FormData","append","sendNotification","socket","emit","from","toid","msg","name","transports","on","imageSelected","addPost","loadMorePosts","LoginComponent","router","credentials","email","password","adminUser","adminPass","form","asAdmin","isLoggedIn","navigateByUrl","login","formGroup","err","submit","NotificationsComponent","notifications","forEach","notification","postData","RegisterComponent","register","SignupComponent","UsersComponent","users","followerId","AdService","httpClient","providedIn","AdminService","body","AuthGuardService","AuthenticationService","token","localStorage","setItem","getItem","removeItem","getToken","payload","split","atob","getUserDetails","exp","Date","now","method","type","base","headers","Authorization","request","saveToken","saveId","saveName","saveFollowers","SharedDataService","newNotification","newNotification$","asObservable","newNot","next","FooterComponent","HeaderComponent","getsNewNotification","newNotifications","logout","NotFoundComponent","SideBarComponent","ADD_POST","LIST_POSTS","REMOVE_POST","ADD_LIKE","REMOVE_LIKE","ADD_COMMENT","ADD_FIRST","AddPost","ListPosts","RemovePost","AddLike","RemoveLike","AddComment","AddPostFirst","initialState","postsReducer","state","action","slice","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport {AppComponent} from './app.component';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {LoginComponent} from './components/login/login.component';\r\nimport { AdsComponent } from './components/admin/ads/ads.component';\r\nimport {NotificationsComponent} from \"./components/notifications/notifications.component\";\r\nimport {UsersComponent} from \"./components/users/users.component\";\r\nimport {FollowingComponent} from \"./components/following/following.component\";\r\nimport {AuthGuardService} from \"./services/authGuard.service\";\r\nimport {RegisterComponent} from \"./components/register/register.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  {path: 'admin', component: AdminComponent, canActivate: [AuthGuardService]},\r\n  {\r\n    path: 'ads',\r\n    component: AdsComponent, canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'home', component: HomeComponent, canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'login', component: LoginComponent\r\n  },\r\n  {\r\n    path: 'notifications', component: NotificationsComponent, canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'users', component: UsersComponent, canActivate: [AuthGuardService]\r\n  }\r\n  ,\r\n  {\r\n    path: 'followings', component: FollowingComponent, canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'register', component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthenticationService} from \"./services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent{\r\n  title = 'FrontEnd';\r\n  constructor(public auth: AuthenticationService) {\r\n  }\r\n}\r\n","<header>\r\n  <app-header *ngIf=\"auth.isLoggedIn()\" calss=\"header\"></app-header>\r\n</header>\r\n<main>\r\n  <div class=\"container\">\r\n    <app-side-bar *ngIf=\"auth.isLoggedIn()\" class=\"sidebar\"></app-side-bar>\r\n    <div class=\"content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <app-ad *ngIf=\"auth.isLoggedIn()\"></app-ad>\r\n  </div>\r\n</main>\r\n<!--<footer>-->\r\n<!--  <app-footer></app-footer>-->\r\n<!--</footer>-->\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\r\nimport { FooterComponent } from './shared/footer/footer.component';\r\nimport { SideBarComponent } from './shared/side-bar/side-bar.component';\r\nimport { HeaderComponent } from './shared/header/header.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { postsReducer } from './store/reducers/post.reducer';\r\nimport { StoreModule} from '@ngrx/store';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport { AdsComponent } from './components/admin/ads/ads.component';\r\nimport {MatCardModule} from \"@angular/material/card\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\r\nimport {MatMenuModule} from \"@angular/material/menu\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport { HeaderAdminComponent } from './components/admin/header-admin/header-admin.component';\r\nimport { UnhealthyComponent } from './components/admin/unhealthy/unhealthy.component';\r\nimport { FilteredComponent } from './components/admin/filtered/filtered.component';\r\nimport { ActivationsComponent } from './components/admin/activations/activations.component';\r\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\r\nimport {NotificationsComponent} from \"./components/notifications/notifications.component\";\r\nimport { AdComponent } from './components/home/ad/ad.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { FollowingComponent } from './components/following/following.component';\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NotFoundComponent,\r\n    FooterComponent,\r\n    SideBarComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    HomeComponent,\r\n    AdminComponent,\r\n    AdsComponent,\r\n    HeaderAdminComponent,\r\n    UnhealthyComponent,\r\n    FilteredComponent,\r\n    NotificationsComponent,\r\n    ActivationsComponent,\r\n    AdComponent,\r\n    UsersComponent,\r\n    FollowingComponent,\r\n    RegisterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    StoreModule.forRoot({\r\n      posts: postsReducer\r\n    }),\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSidenavModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-activations',\r\n  templateUrl: './activations.component.html',\r\n  styleUrls: ['./activations.component.scss']\r\n})\r\nexport class ActivationsComponent implements OnInit {\r\n  data: Object[];\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.adminService.getActivations().subscribe(\r\n      data => {\r\n        console.log(data['data']);\r\n        this.data = data['data'];\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  accept(user) {\r\n    this.adminService.acceptActivation(user['_id']).subscribe(\r\n      data => {\r\n        alert('success');\r\n        this.loadData();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n\r\n  }\r\n\r\n  refuse(user) {\r\n    this.adminService.refuseActivation(user['_id']).subscribe(\r\n      data => {\r\n        alert('success');\r\n        this.loadData();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-card *ngFor=\"let item of data\">\r\n  <div *ngIf=\"!item['reviewed']\">\r\n    <mat-card-title>{{item['userid']['username']}}</mat-card-title>\r\n    <mat-card-subtitle>{{item['userid']['email']}}</mat-card-subtitle>\r\n    <mat-card-actions>\r\n      <a mat-button (click)=\"accept(item)\">Accept</a>\r\n      <a mat-button (click)=\"refuse(item)\">Refuse</a>\r\n    </mat-card-actions>\r\n  </div>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nenum CurrentPage {\r\n  Ads,\r\n  Filtered,\r\n  Unhealthy,\r\n  Activations\r\n}\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  currentPage: CurrentPage = CurrentPage.Ads;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openAdsPage() {\r\n    this.currentPage = CurrentPage.Ads;\r\n  }\r\n\r\n  openFilteredPage() {\r\n    this.currentPage = CurrentPage.Filtered;\r\n  }\r\n\r\n  openUnhealthyPage() {\r\n    this.currentPage = CurrentPage.Unhealthy;\r\n  }\r\n\r\n  openActivationsPage() {\r\n    this.currentPage = CurrentPage.Activations;\r\n  }\r\n\r\n  isAdsPage(): boolean {\r\n    return this.currentPage === CurrentPage.Ads;\r\n  }\r\n\r\n  isFilteredPage(): boolean {\r\n    return this.currentPage === CurrentPage.Filtered;\r\n  }\r\n\r\n  isUnhealthyPage(): boolean {\r\n    return this.currentPage === CurrentPage.Unhealthy;\r\n  }\r\n\r\n  isActivationsPage(): boolean {\r\n    return this.currentPage === CurrentPage.Activations;\r\n  }\r\n\r\n}\r\n","<app-header-admin\r\n  (adsClicked)=\"openAdsPage()\"\r\n  (filteredClicked)=\"openFilteredPage()\"\r\n  (unhealthyClicked)=\"openUnhealthyPage()\"\r\n  (activationsClicked)=\"openActivationsPage()\">\r\n</app-header-admin>\r\n<app-ads *ngIf=\"isAdsPage()\"></app-ads>\r\n<app-filtered *ngIf=\"isFilteredPage()\"></app-filtered>\r\n<app-unhealthy *ngIf=\"isUnhealthyPage()\"></app-unhealthy>\r\n<app-activations *ngIf=\"isActivationsPage()\"></app-activations>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-ads',\r\n  templateUrl: './ads.component.html',\r\n  styleUrls: ['./ads.component.scss']\r\n})\r\nexport class AdsComponent implements OnInit {\r\n\r\n  text: string;\r\n  image: string;\r\n  isAll: boolean;\r\n\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  pushAd() {\r\n    this.adminService.pushAd({\r\n      text: this.text,\r\n      image: this.image,\r\n      isAll: this.isAll\r\n    }).subscribe(\r\n      data => {\r\n        alert('ad pushed');\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n}\r\n","<div>\r\n  Text: <input [(ngModel)]=\"text\"><br>\r\n  Image: <input [(ngModel)]=\"image\"><br>\r\n  <input [(ngModel)]=\"isAll\" type=\"checkbox\"> Is All<br>\r\n  <a mat-button (click)=\"pushAd()\">Push</a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { Filter } from 'src/app/models/filter.model';\r\n\r\n@Component({\r\n  selector: 'app-filtered',\r\n  templateUrl: './filtered.component.html',\r\n  styleUrls: ['./filtered.component.scss']\r\n})\r\nexport class FilteredComponent implements OnInit {\r\n\r\n  data: Filter[];\r\n  isAddOrEdit = false;\r\n  editWord = \"\";\r\n\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  switchAddEdit() {\r\n    this.isAddOrEdit = !this.isAddOrEdit;\r\n  }\r\n\r\n  loadData() {\r\n    this.adminService.getFiltered().subscribe(\r\n      data => {\r\n        console.log(data['data']);\r\n        this.data = data['data'];\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  editDone() {\r\n    this.adminService.editFilter(this.editWord).subscribe(\r\n      data => {\r\n        console.log('success');\r\n        this.switchAddEdit();\r\n        this.editWord = \"\";\r\n        this.loadData();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  editMe(item: Filter) {\r\n    this.editWord = item.word;\r\n    this.switchAddEdit();\r\n  }\r\n\r\n}\r\n","<mat-list>\r\n  <mat-list-item *ngIf=\"!isAddOrEdit\">\r\n    <a mat-button (click)=\"switchAddEdit()\">Add Word</a>\r\n  </mat-list-item>\r\n  <mat-list-item *ngIf=\"isAddOrEdit\">\r\n    <input [(ngModel)]=\"editWord\">\r\n    <a mat-button (click)=\"editDone()\">Done</a>\r\n  </mat-list-item>\r\n  <mat-list-item *ngFor=\"let item of data\">\r\n    <div>\r\n      <span>{{item.word}} </span>\r\n      <!-- <a mat-button (click)=\"editMe(item)\"> Edit </a>\r\n      <a mat-button> Delete </a> -->\r\n    </div>\r\n  </mat-list-item>\r\n\r\n </mat-list>\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-admin',\r\n  templateUrl: './header-admin.component.html',\r\n  styleUrls: ['./header-admin.component.scss']\r\n})\r\nexport class HeaderAdminComponent implements OnInit {\r\n\r\n  @Output() adsClicked: EventEmitter<any> = new EventEmitter();\r\n  @Output() filteredClicked: EventEmitter<any> = new EventEmitter();\r\n  @Output() unhealthyClicked: EventEmitter<any> = new EventEmitter();\r\n  @Output() activationsClicked: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n  <mat-toolbar-row>\r\n    <span>Admin</span>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row>\r\n    <mat-nav-list class=\"list-horizontal\">\r\n      <a mat-list-item (click)=\"adsClicked.emit()\" routerLinkActive=\"active\">Ads</a>\r\n      <a mat-list-item (click)=\"filteredClicked.emit()\" routerLinkActive=\"active\">Filtered</a>\r\n      <a mat-list-item (click)=\"unhealthyClicked.emit()\" routerLinkActive=\"active\">Unhealthy</a>\r\n      <a mat-list-item (click)=\"activationsClicked.emit()\" routerLinkActive=\"active\">Activations</a>\r\n    </mat-nav-list>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\nimport { Post } from 'src/app/models/post.model';\r\n\r\n@Component({\r\n  selector: 'app-unhealthy',\r\n  templateUrl: './unhealthy.component.html',\r\n  styleUrls: ['./unhealthy.component.scss']\r\n})\r\nexport class UnhealthyComponent implements OnInit {\r\n  data: Object[];\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.adminService.getUnhealthy().subscribe(\r\n      data => {\r\n        console.log(data['data']);\r\n        this.data = data['data'];\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  makeHealthy(item) {\r\n    this.adminService.disableUnhealthy(item['_id']).subscribe(\r\n      data => {\r\n        alert('success');\r\n        this.loadData();\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-card *ngFor=\"let item of data\">\r\n  <mat-card-title>{{item['userid']['username']}}</mat-card-title>\r\n  <mat-card-content>{{item['text']}}</mat-card-content>\r\n  <mat-card-actions>\r\n    <a mat-button (click)=\"makeHealthy(item)\">Make Healthy</a>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-following',\r\n  templateUrl: './following.component.html',\r\n  styleUrls: ['./following.component.scss']\r\n})\r\nexport class FollowingComponent implements OnInit {\r\n  followings;\r\n  userId;\r\n\r\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.auth.getId();\r\n\r\n    this.http.get('http://127.0.0.1:3000/user/' + this.userId + '/followings')\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          this.followings = data['followings'];\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  unfollow(id: any) {\r\n    this.http.post('http://127.0.0.1:3000/user/unfollow', {\r\n      followingId: id,\r\n      id: this.userId\r\n    })\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n","<!--<div *ngFor=\"let notification of notifications ; let idx = index\">-->\r\n<div>\r\n  <mat-sidenav-container class=\"followings-container\">\r\n    <mat-card class=\"following-card\" *ngFor=\"let following of followings; let idx = index\">\r\n      <mat-card-content>\r\n        <div class=\"follow-content\">\r\n          <span>{{following.username}}</span>\r\n          <button mat-button color=\"primary\" class=\"funollow-button\" (click)=\"unfollow(following._id)\">UnFollow <mat-icon>person_add_disabled</mat-icon></button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-sidenav-container>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdService } from 'src/app/services/ad.service';\r\n\r\n@Component({\r\n  selector: 'app-ad',\r\n  templateUrl: './ad.component.html',\r\n  styleUrls: ['./ad.component.scss']\r\n})\r\nexport class AdComponent implements OnInit {\r\n  ad: Object;\r\n  constructor(private adService: AdService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.adService.getAd().subscribe(\r\n      data => {\r\n        console.log(data['data']);\r\n        this.ad = data['data'];\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n}\r\n","<mat-card *ngIf=\"ad\" class=\"ad\">\r\n  <mat-card-subtitle>{{ad['text']}}</mat-card-subtitle>\r\n  <img mat-card-image src=\"{{ad['image']}}\">\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport {PostState} from '../../store/states/post.state';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport * as PostActions from '../../store/actions/post.actions';\r\nimport {Observable} from 'rxjs';\r\nimport {Post} from '../../models/post.model';\r\nimport {first} from 'rxjs/operators';\r\nimport io from 'socket.io-client';\r\nimport {SharedDataService} from \"../../services/sharedData.service\";\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\n\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  posts: Observable<Post[]>;\r\n  delIdx = null;\r\n  postIdx = null;\r\n  skip = 0;\r\n  limit = 20;\r\n  userId = null;\r\n  userName = null;\r\n  postText = null;\r\n  postNotify = false;\r\n  postImg = null;\r\n  errMsg = '';\r\n  socket;\r\n  followers;\r\n\r\n  constructor(private store: Store<PostState>, private http: HttpClient, private sharedDataService: SharedDataService,\r\n              private auth: AuthenticationService) {\r\n    this.posts = store.select('posts');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.skip = 0;\r\n    this.limit = 20;\r\n\r\n    this.userId = this.auth.getId();\r\n\r\n    this.userName = this.auth.getName();\r\n\r\n    this.followers = this.auth.getFollowers();\r\n\r\n    this.sharedDataService.setsShowNotification(false);\r\n\r\n    this.loadPosts();\r\n\r\n    this.socketConnect();\r\n    this.updateNotifications();\r\n  }\r\n\r\n  showDeleteSection(index) {\r\n    if (this.delIdx === index){\r\n      this.delIdx = null;\r\n    } else {\r\n      this.delIdx = index;\r\n    }\r\n  }\r\n\r\n  showCommentsSection(index) {\r\n    if (this.postIdx === index){\r\n      this.postIdx = null;\r\n    } else {\r\n      this.postIdx = index;\r\n    }\r\n  }\r\n\r\n  deletePost(index: any, id: any) {\r\n    const res = this.posts.pipe(first()).subscribe(result => {\r\n      // const index = result.findIndex(objInItems => new String(objInItems.post['_id']).trim() === new String(id).trim());\r\n      // console.log(index, id);\r\n\r\n    this.http.post('http://127.0.0.1:3000/post/remove', {id})\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.delIdx = null;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n\r\n    this.store.dispatch(new PostActions.RemovePost(index));\r\n    });\r\n  }\r\n\r\n  likeUnlike(idx: number, pid: any) {\r\n    this.posts.pipe(first()).subscribe(result => {\r\n      console.log(result);\r\n      const index = result.findIndex(objInItems => new String(objInItems.post['_id']).trim() === new String(pid).trim());\r\n      const currentPost = result[index].post;\r\n      let poss = JSON.stringify(currentPost);\r\n      poss = JSON.parse(poss);\r\n\r\n      console.log(poss['likes']);\r\n\r\n      // let likeIndex = poss['likes'].findIndex(objInItems => new String(objInItems).trim() === new String(this.userId).trim());\r\n      // if (likeIndex < 0) {\r\n        const likeIndex = poss['likes'].findIndex((objInItems) => {\r\n          console.log(objInItems);\r\n          if (objInItems.hasOwnProperty('userid')) {\r\n            return new String(objInItems.userid._id).trim() === new String(this.userId).trim();\r\n          } else {\r\n            return new String(objInItems).trim() === new String(this.userId).trim();\r\n          }\r\n        });\r\n      // }\r\n      console.log(likeIndex)\r\n      if (likeIndex < 0) {\r\n        if (poss['likes'] === undefined) {\r\n          poss['likes'] = [this.userId];\r\n        } else {\r\n          poss['likes'].push(this.userId);\r\n        }\r\n        this.store.dispatch(new PostActions.AddLike(idx, {post: poss}));\r\n        // add like to DB\r\n\r\n        this.http.post('http://127.0.0.1:3000/likes/like', {userid: this.userId, postid: pid})\r\n          .subscribe(data => {\r\n              console.log(data);\r\n              this.delIdx = null;\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            });\r\n      }\r\n      else {\r\n        if (poss['likes'].length === 1) {\r\n          poss['likes'] = [];\r\n        } else {\r\n          poss['likes'].splice(likeIndex, 1);\r\n        }\r\n        this.store.dispatch(new PostActions.RemoveLike(idx, {post: poss}));\r\n\r\n        // remove like from DB\r\n        this.http.post('http://127.0.0.1:3000/likes/dislike', {userid: this.userId, postid: pid})\r\n          .subscribe(data => {\r\n              console.log(data);\r\n              this.delIdx = null;\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  AddComment(idx: number, pid: any, event: any) {\r\n    const text = event.target.value;\r\n\r\n    if(event.key == 'Enter') {\r\n      console.log(event.key);\r\n      this.posts.pipe(first()).subscribe(result => {\r\n        const index = result.findIndex(objInItems => new String(objInItems.post['_id']).trim() === new String(pid).trim());\r\n        const currentPost = result[index].post;\r\n        let poss = JSON.stringify(currentPost);\r\n        poss = JSON.parse(poss);\r\n\r\n        // const likeIndex = poss['comments'].findIndex(objInItems => new String(objInItems).trim() === new String(pid).trim());\r\n\r\n        const bodyRequest = {postid: pid, userid: this.userId, text: text};\r\n\r\n        const comment = {\r\n          text: text,\r\n          userid: {\r\n            username: this.userName,\r\n            _id: this.userId\r\n          }\r\n        };\r\n\r\n        if (poss['comments'] === undefined) {\r\n          poss['comments'] = [comment];\r\n        } else {\r\n          poss['comments'].push(comment);\r\n        }\r\n\r\n        this.http.post('http://127.0.0.1:3000/comments/create-comment', bodyRequest)\r\n          .subscribe(data => {\r\n              console.log(data);\r\n              this.delIdx = null;\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            });\r\n\r\n        this.store.dispatch(new PostActions.AddComment(idx, {post: poss}));\r\n      });\r\n    }\r\n  }\r\n\r\n  loadMorePosts() {\r\n    this.skip += this.limit;\r\n    this.loadPosts();\r\n  }\r\n\r\n  loadPosts() {\r\n    this.http.get('http://127.0.0.1:3000/get-posts/' + this.userId + '&' + this.skip + '&' + this.limit)\r\n      .subscribe(data => {\r\n          for (const post of data['posts']) {\r\n            this.store.dispatch(new PostActions.AddPost({\r\n              post\r\n            }));\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  addPost() {\r\n    if (this.postText === null && this.postImg === null) {\r\n      this.errMsg = 'You should choose an image or write something!';\r\n      return;\r\n    }\r\n\r\n    console.log('inside')\r\n\r\n    let fd = new FormData();\r\n    if (this.postImg !== null) {\r\n      fd.append('image', this.postImg);\r\n    }\r\n    if (this.postText !== null) {\r\n      fd.append('text', this.postText);\r\n    }\r\n\r\n    // console.log(this.postText);\r\n    // console.log(this.postImg);\r\n\r\n    fd.append('notifyusers', this.postNotify + '');\r\n    fd.append('userid', this.userId);\r\n\r\n    // console.log('inside 2')\r\n\r\n    this.http.post('http://127.0.0.1:3000/post/create-post', fd)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        let post = data['post'];\r\n        post['likes'] = [];\r\n        post['comments'] = [];\r\n\r\n        this.store.dispatch(new PostActions.AddPostFirst({\r\n            post: post\r\n          }));\r\n        this.errMsg = null;\r\n\r\n        this.sendNotification();\r\n\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n    console.log('outside')\r\n  }\r\n\r\n  imageSelected(event: Event) {\r\n    this.postImg = event.target['files'][0];\r\n  }\r\n\r\n  sendNotification() {\r\nconsole.log(this.followers);\r\n    this.socket.emit('getMsg', {\r\n      from: this.userId,\r\n      toid : this.followers,\r\n      msg : 'user have new post',\r\n      name : 'PANDA MAIN'\r\n    });\r\n    console.log('message emitted');\r\n  }\r\n\r\n  private socketConnect() {\r\n    this.socket = io('http://localhost:3000', {\r\n      transports: ['websocket']\r\n    });\r\n\r\n    this.socket.emit('username', this.userId);\r\n  }\r\n\r\n  private updateNotifications() {\r\n    this.socket.on('sendMsg', (data) => {\r\n      console.log('message recieved', data);\r\n      this.sharedDataService.setsShowNotification(true);\r\n    });\r\n  }\r\n}\r\n","<div>\r\n  <mat-sidenav-container class=\"new-post-container\">\r\n    <mat-card class=\"new-post-card\">\r\n      <mat-card-header>\r\n        <mat-card-title>Post Something</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"\">\r\n          <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../assets/test.jpg)'}\" class=\"post-header-image\"></div>\r\n          <mat-form-field class=\"post-text-area\" appearance=\"fill\">\r\n            <mat-label>What you feel?</mat-label>\r\n            <textarea matInput  matTextareaAutosize=\"false\" [(ngModel)]=\"postText\"\r\n                      [rows]=\"6\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-card-content>\r\n      <mat-card-actions class=\"post-action-buttons\">\r\n        <button mat-button color=\"primary\">\r\n          <label for=\"fileToUpload\">\r\n            <mat-icon class=\"add-photo-icon\">add_photo_alternate</mat-icon> Add Image\r\n          </label>\r\n        </button>\r\n        <input id=\"fileToUpload\" type=\"file\" accept=\"image/*\" style=\"display:none;\" (change)=\"imageSelected($event)\">\r\n\r\n        <mat-checkbox color=\"primary\" [(ngModel)]=\"postNotify\">Notify Followers</mat-checkbox>\r\n\r\n        <button mat-button color=\"primary\" class=\"post-button\" (click)=\"addPost()\">Post <mat-icon>near_me</mat-icon></button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <mat-error *ngIf=\"errMsg\" class=\"err-msg\">{{errMsg}}</mat-error>\r\n  </mat-sidenav-container>\r\n\r\n  <div *ngFor=\"let post of posts | async; let idx = index\">\r\n    <mat-sidenav-container class=\"comments-container\" *ngIf=\"post.post._id\" id=\"post_{{post.post._id}}\">\r\n      <mat-card class=\"post-card\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../assets/test.jpg)'}\" class=\"example-header-image\"></div>\r\n          <mat-card-title class=\"title\">{{post.post.userid.username}}</mat-card-title>\r\n          <button mat-icon-button *ngIf=\"post.post.userid._id === userId || post.post.userid === userId\" color=\"primary\" aria-label=\"Example icon-button with a heart icon\" class=\"edit-post\"\r\n                  id=\"post-edit_{{post.post._id}}\" (click)=\"showDeleteSection(idx)\">\r\n            <mat-icon>more_vert</mat-icon></button>\r\n          <div class=\"remove-post-cont\" id=\"post-remove_{{post.post._id}}\" [hidden]=\"delIdx !== idx\">\r\n            <button mat-button color=\"primary\" class=\"remove-post\" (click)=\"deletePost(idx, post.post._id)\">Delete</button>\r\n          </div>\r\n        </mat-card-header>\r\n        <div class=\"img-container\">\r\n          <img *ngIf=\"post.post.img\" mat-card-image class=\"img-article\" src=\"http://localhost:3000/{{post.post.img}}\" alt=\"\">\r\n        </div>\r\n        <mat-card-content>\r\n          <p>\r\n            {{post.post.text}}\r\n          </p>\r\n        </mat-card-content>\r\n        <mat-card-actions class=\"action-buttons\">\r\n          <button mat-button color=\"primary\" (click)=\"likeUnlike(idx, post.post._id)\"><mat-icon>thumb_up_alt</mat-icon> {{post.post.likes.length}} Likes</button>\r\n          <button mat-button color=\"primary\" (click)=\"showCommentsSection(idx)\"><mat-icon>comment</mat-icon> Comments</button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n      <div [hidden]=\"postIdx !== idx\">\r\n        <mat-card class=\"post-comment\">\r\n          <mat-card-header class=\"post-comment-header\">\r\n            <mat-card-subtitle>Comment</mat-card-subtitle>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"\">\r\n              <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../assets/test.jpg)'}\" class=\"post-header-image\"></div>\r\n              <mat-form-field class=\"comment-text-area\" appearance=\"fill\">\r\n                <mat-label>Comment?</mat-label>\r\n                <textarea matInput  matTextareaAutosize=\"false\" (keyup)=\"AddComment(idx, post.post._id, $event)\"\r\n                          [rows]=\"3\"></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n\r\n  <!--      <div *ngFor=\"let comment of post.post.comments | async; let idx = index\">-->\r\n\r\n        <mat-card class=\"comments-card\" *ngFor=\"let comment of post.post.comments; let cidx = index\">\r\n          <mat-card-header>\r\n            <div mat-card-avatar [ngStyle]=\"{'background-image': 'url(../../assets/test.jpg)'}\" class=\"example-header-image\"></div>\r\n            <mat-card-subtitle class=\"title\">{{comment.userid.username}}</mat-card-subtitle>\r\n  <!--          <button mat-icon-button *ngIf=\"comment.userid._id === userId\" color=\"primary\" aria-label=\"Delete comment\" class=\"edit-post\">-->\r\n  <!--            <mat-icon>delete</mat-icon></button>-->\r\n          </mat-card-header>\r\n          <mat-card-content class=\"comment-content\">\r\n            <p>\r\n              {{comment.text}}\r\n            </p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n    </mat-sidenav-container>\r\n  </div>\r\n\r\n  <mat-sidenav-container class=\"load-more\">\r\n    <mat-card class=\"load-more-content\">\r\n      <mat-card-content>\r\n        <button mat-icon-button color=\"primary\" aria-label=\"Load more posts\" class=\"load-more-button\" (click)=\"loadMorePosts()\">\r\n          <mat-icon>refresh</mat-icon></button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-sidenav-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  credentials = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  adminUser = 'lionos';\r\n  adminPass = 'happyPanda';\r\n  error: string;\r\n  asAdmin: boolean;\r\n  form: FormGroup = new FormGroup({\r\n    username: new FormControl(),\r\n    password: new FormControl(),\r\n    asAdmin: new FormControl()\r\n  });\r\n\r\n  constructor(private router: Router, private auth: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.form.value.username)\r\n    if (this.form.value.username === null || this.form.value.password === null) {\r\n      this.error = 'Please fill username and password';\r\n      return;\r\n    }\r\n    this.error = '';\r\n    if (this.form.value.asAdmin !== undefined && this.form.value.asAdmin) {\r\n      if (\r\n        this.form.value.username === this.adminUser &&\r\n        this.form.value.password === this.adminPass\r\n      ) {\r\n        this.router.navigateByUrl('/admin');\r\n      }\r\n    } else {\r\n      this.login(this);\r\n    }\r\n  }\r\n\r\n  login(formGroup) {\r\n    console.log(formGroup.form.value.username);\r\n    this.auth.login(formGroup.form.value).subscribe(() => {\r\n      this.router.navigateByUrl('/home');\r\n    }, (err) => {\r\n      this.error = 'Invalid credentials';\r\n\r\n      console.error(err);\r\n    });  }\r\n}\r\n","<mat-card class=\"login-form\">\r\n  <mat-card-title>Login</mat-card-title>\r\n<mat-card-content>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n\r\n  <mat-form-field>\r\n    <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n  </mat-form-field>\r\n\r\n<mat-checkbox formControlName=\"asAdmin\" color=\"primary\">Login As Admin</mat-checkbox>\r\n\r\n<div class=\"button\">\r\n  <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\r\n</div>\r\n\r\n  <p *ngIf=\"error\" class=\"error\">\r\n    {{ error }}\r\n  </p>\r\n\r\n</form>\r\n</mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n  userId;\r\n  notifications;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = '5e8bcb6c258256022cac8a0c';\r\n    this.http.get('http://127.0.0.1:3000/notifications/get/' + this.userId)\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          this.notifications = data['notifications'];\r\n\r\n          this.notifications.forEach(notification =>  {\r\n            this.http.post('http://127.0.0.1:3000/notifications/read/' + notification['_id'] + '/' + this.userId, {})\r\n              .subscribe(postData => {\r\n                  console.log(postData);\r\n                },\r\n                error => {\r\n                  console.log(error);\r\n                });\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n}\r\n","<div *ngFor=\"let notification of notifications ; let idx = index\">\r\n  <mat-sidenav-container class=\"notification-container\">\r\n    <mat-card class=\"notification-card\">\r\n      <mat-card-content>\r\n        <p>\r\n          From <a href=\"user/{{notification.from._id}}\">{{notification.from.username}}</a> {{notification.text}}\r\n        </p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </mat-sidenav-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {AuthenticationService} from \"../../services/authentication.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  error;\n  form: FormGroup = new FormGroup({\n    username: new FormControl(),\n    password: new FormControl(),\n    email: new FormControl()\n  });\n\n  constructor(private auth: AuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  submit() {\n    console.log(this.form.value);\n    this.auth.register(this.form.value).subscribe(() => {\n      this.router.navigateByUrl('/login');\n    }, (err) => {\n      this.error = 'Invalid credentials';\n\n      console.error(err);\n    });\n  }\n\n  login(formGroup) {\n    // console.log(formGroup.form.value.username);\n    // this.auth.login(formGroup.form.value).subscribe(() => {\n    //   this.router.navigateByUrl('/login');\n    // }, (err) => {\n    //   this.error = 'Invalid credentials';\n    //\n    //   console.error(err);\n    // });\n  }\n}\n","<mat-card class=\"login-form\">\n  <mat-card-title>Register</mat-card-title>\n  <mat-card-content>\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n      <mat-form-field>\n        <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input type=\"email\" matInput placeholder=\"email\" formControlName=\"email\">\n      </mat-form-field>\n\n      <div class=\"button\">\n        <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\n      </div>\n\n      <p *ngIf=\"error\" class=\"error\">\n        {{ error }}\n      </p>\n\n    </form>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>signup works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  users;\r\n  userId;\r\n  constructor(private http: HttpClient, private auth: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = this.userId = this.auth.getId();\r\n\r\n    this.http.post('http://127.0.0.1:3000/user/list', {\r\n      id: this.userId\r\n    })\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          this.users = data['users'];\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  follow(id: any) {\r\n    this.http.post('http://127.0.0.1:3000/user/follow', {\r\n      id: this.userId,\r\n      followerId: id\r\n    })\r\n      .subscribe(data => {\r\n          console.log(data);\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n","<div>\r\n  <mat-sidenav-container class=\"users-container\">\r\n    <mat-card class=\"user-card\" *ngFor=\"let user of users ; let idx = index\">\r\n      <mat-card-content>\r\n        <div class=\"user-content\">\r\n          <span>{{user.username}}</span>\r\n          <button mat-flat-button color=\"primary\" class=\"follow-button\" (click)=\"follow(user._id)\">Follow <mat-icon>person_add</mat-icon></button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-sidenav-container>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAd() {\r\n    return this.httpClient.get('http://localhost:3000/admin/ad');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Filter } from '../models/filter.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  constructor(private httpClient: HttpClient ) { }\r\n\r\n  getFiltered() {\r\n    return this.httpClient.get('http://localhost:3000/admin/filtered');\r\n  }\r\n\r\n  editFilter(word: string) {\r\n    return this.httpClient.post('http://localhost:3000/admin/addFilter', {word});\r\n  }\r\n\r\n  pushAd(body) {\r\n    return this.httpClient.post('http://localhost:3000/admin/pushAd', body);\r\n  }\r\n\r\n  getUnhealthy() {\r\n    return this.httpClient.get('http://localhost:3000/admin/unhealthy-post');\r\n  }\r\n\r\n  disableUnhealthy(id) {\r\n    return this.httpClient.post('http://localhost:3000/admin/disable-unhealthy', {id});\r\n  }\r\n\r\n  getActivations() {\r\n    return this.httpClient.get('http://localhost:3000/admin/activations');\r\n  }\r\n\r\n  acceptActivation(id) {\r\n    return this.httpClient.post('http://localhost:3000/admin/accept-activation', {id});\r\n  }\r\n\r\n  refuseActivation(id) {\r\n    return this.httpClient.post('http://localhost:3000/admin/refuse-activation', {id});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (!this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl('/');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Router} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private token;\r\n  private id;\r\n  private name;\r\n  private followers;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('mean-token', token);\r\n    this.token = token;\r\n  }\r\n\r\n  private saveId(id: any | string) {\r\n    localStorage.setItem('mean-id', id);\r\n    this.id = id;\r\n  }\r\n\r\n  private saveName(name: any | string) {\r\n    localStorage.setItem('mean-name', name);\r\n    this.name = name;\r\n  }\r\n\r\n  private saveFollowers(followers: any ) {\r\n    localStorage.setItem('mean-followers', followers);\r\n    this.followers = followers;\r\n  }\r\n\r\n  public getToken(): string {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem('mean-token');\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  public getId(): string {\r\n    if (!this.id) {\r\n      this.id = localStorage.getItem('mean-id');\r\n    }\r\n    return this.id;\r\n  }\r\n\r\n  public getName(): string {\r\n    if (!this.name) {\r\n      this.name = localStorage.getItem('mean-id');\r\n    }\r\n    return this.name;\r\n  }\r\n\r\n  public getFollowers(): string {\r\n    if (!this.followers) {\r\n      this.followers = localStorage.getItem('mean-followers');\r\n    }\r\n    return this.followers;\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = '';\r\n    window.localStorage.removeItem('mean-token');\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  public getUserDetails() {\r\n    const token = this.getToken();\r\n    let payload;\r\n    if (token) {\r\n      payload = token.split('.')[1];\r\n      payload = window.atob(payload);\r\n      return JSON.parse(payload);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails();\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private request(method: 'post'|'get', type: 'login'|'register', user?): Observable<any> {\r\n    let base;\r\n\r\n    if (method === 'post') {\r\n      base = this.http.post('http://localhost:3000/user/' + type, user);\r\n    } else {\r\n      base = this.http.get('http://localhost:3000/user/' + type, { headers: { Authorization: `Bearer ${this.getToken()}` }});\r\n    }\r\n\r\n    console.log(base);\r\n\r\n    const request = base.pipe(\r\n      map((data) => {\r\n        console.log(data)\r\n        if (data['token']) {\r\n          this.saveToken(data['token']);\r\n          this.saveId(data['user']._id);\r\n          this.saveName(data['user'].username);\r\n          this.saveFollowers(data['user'].followers);\r\n          console.log(data['user']);\r\n        }\r\n        return data;\r\n      })\r\n    );\r\n\r\n    return request;\r\n  }\r\n\r\n  public login(user): Observable<any> {\r\n    console.log(user)\r\n    return this.request('post', 'login', user);\r\n  }\r\n\r\n\r\n  register(value: any) {\r\n    return this.request('post', 'register', value);\r\n\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable, Subject} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedDataService {\r\n  newNotification = new Subject();\r\n  newNotification$ = this.newNotification.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  getsNewNotification(): Observable<any> {\r\n    return this.newNotification$;\r\n  }\r\n\r\n  setsShowNotification(newNot: boolean) {\r\n    this.newNotification.next(newNot);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport {SharedDataService} from '../../services/sharedData.service';\r\nimport {AuthenticationService} from \"../../services/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  newNotifications;\r\n\r\n  constructor(private sharedDataService: SharedDataService, public auth: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sharedDataService.getsNewNotification().subscribe(data => {\r\n      console.log('observing', data);\r\n      this.newNotifications = data;\r\n      console.log(this.newNotifications);\r\n    });\r\n    console.log('notific', this.newNotifications);\r\n  }\r\n\r\n  logout() {\r\n    console.log('out')\r\n    this.auth.logout();\r\n  }\r\n}\r\n","<mat-toolbar class=\"main-toolbar\" color=\"primary\">\r\n  <div class=\"content\">\r\n    <span><a href=\"/home\">liLCPanda</a></span>\r\n          <input type=\"text\" matInput class=\"search-area\">\r\n    <button mat-icon-button color=\"primary\" aria-label=\"Load more posts\" class=\"search-button\">\r\n      <mat-icon>search</mat-icon></button>\r\n\r\n    <button mat-icon-button routerLink=\"notifications\" *ngIf=\"newNotifications\" color=\"warn\" aria-label=\"Load more posts\" class=\"notifications-button\">\r\n      <mat-icon>notifications_active</mat-icon></button>\r\n\r\n    <button mat-icon-button routerLink=\"notifications\" *ngIf=\"!newNotifications\" color=\"secondary\" aria-label=\"Load more posts\" class=\"notifications-button\">\r\n      <mat-icon>notifications</mat-icon></button>\r\n\r\n    <button *ngIf=\"auth.isLoggedIn()\" mat-icon-button routerLink=\"logout\" color=\"secondary\" aria-label=\"Load more posts\" class=\"logout-button\" (click)=\"logout()\">\r\n      <mat-icon>exit_to_app</mat-icon> Logout</button>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.scss']\n})\nexport class SideBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\r\n    <mat-card class=\"following-cad\">\r\n      <mat-card-content>\r\n        <button mat-button routerLink=\"followings\" color=\"primary\" aria-label=\"Load more posts\" class=\"buttons following-button\">\r\n          <mat-icon>people</mat-icon> Following</button>\r\n\r\n        <button mat-button routerLink=\"users\" color=\"primary\" aria-label=\"Load more posts\" class=\"buttons users-button\">\r\n          <mat-icon>group_add</mat-icon> Users</button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n","// Section 1\r\nimport { Action } from '@ngrx/store';\r\nimport { Post } from '../../models/post.model';\r\n\r\n// Section 2\r\nexport const ADD_POST       = '[POST] Add';\r\nexport const LIST_POSTS    = '[POST] List';\r\nexport const REMOVE_POST    = '[POST] Remove';\r\nexport const ADD_LIKE    = '[POST] Like';\r\nexport const REMOVE_LIKE    = '[POST] DisLike';\r\nexport const ADD_COMMENT    = '[POST] Comment';\r\nexport const ADD_FIRST    = '[POST] AddFirst';\r\n\r\n// Section 3\r\nexport class AddPost implements Action {\r\n  readonly type = ADD_POST;\r\n\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport class ListPosts implements Action {\r\n  readonly type = LIST_POSTS;\r\n\r\n  constructor(public payload: Post[]) {}\r\n}\r\n\r\nexport class RemovePost implements Action {\r\n  readonly type = REMOVE_POST;\r\n\r\n  constructor(public payload: number) {}\r\n}\r\n\r\nexport class AddLike implements Action {\r\n  readonly type = ADD_LIKE;\r\n\r\n  constructor(public idx: number, public pid: any) {}\r\n}\r\n\r\nexport class RemoveLike implements Action {\r\n  readonly type = REMOVE_LIKE;\r\n\r\n  constructor(public idx: number, public pid: any) {}\r\n}\r\n\r\nexport class AddComment implements Action {\r\n  readonly type = ADD_COMMENT;\r\n\r\n  constructor(public idx: number, public post: any) {}\r\n}\r\n\r\nexport class AddPostFirst implements Action {\r\n  readonly type = ADD_FIRST;\r\n\r\n  constructor(public post: any) {}\r\n}\r\n\r\n// Section 4\r\nexport type Actions = ListPosts | AddPost | AddPostFirst | RemovePost | AddComment | AddLike | RemoveLike;\r\n","import { Action } from '@ngrx/store';\r\nimport { Post } from '../../models/post.model';\r\nimport * as PostActions from '../../store/actions/post.actions';\r\n\r\n// Section 1\r\nconst initialState: Post = {\r\n  post: {text: 'test'}\r\n};\r\n\r\n// Section 2\r\nexport function postsReducer(state: Post[] = [initialState], action: PostActions.Actions) {\r\n\r\n  let idx = -1;\r\n  // Section 3\r\n  switch (action.type) {\r\n    case PostActions.LIST_POSTS:\r\n      return state;\r\n    case PostActions.ADD_POST:\r\n      return [...state, action.payload];\r\n    case PostActions.ADD_FIRST:\r\n      return [action.post, ...state];\r\n    case PostActions.REMOVE_POST:\r\n      idx = action.payload;\r\n      return [...state.slice(0, idx), ...state.slice(idx + 1)];\r\n    case PostActions.ADD_LIKE:\r\n      idx = action.idx;\r\n      return [...state.slice(0, idx),\r\n        action.pid,\r\n        ...state.slice(idx + 1)];\r\n    case PostActions.REMOVE_LIKE:\r\n      idx = action.idx;\r\n      return [...state.slice(0, idx),\r\n        action.pid,\r\n        ...state.slice(idx + 1)];\r\n    case PostActions.ADD_COMMENT:\r\n      idx = action.idx;\r\n      return [...state.slice(0, idx),\r\n        action.post,\r\n        ...state.slice(idx + 1)];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport '@angular/compiler';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}